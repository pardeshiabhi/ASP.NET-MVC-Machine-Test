@model IEnumerable<ProductDetail.API.Models.Product>

@{
    ViewData["Title"] = "Product List";
    var currentPage = ViewData["CurrentPage"] as int? ?? 1;
    var totalPages = ViewData["TotalPages"] as int? ?? 1;
}

<h2>Product List</h2>

@if (TempData["SuccessMessage"] != null)
{
    <div id="successMessage" class="alert alert-success slide-in" role="alert">
        @TempData["SuccessMessage"]
    </div>
}

<table class="table table-striped">
    <thead>
        <tr>
            <th>ProductId</th>
            <th>ProductName</th>
            <th>CategoryId</th>
            <th>CategoryName</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var product in Model)
        {
            <tr>
                <td>@product.ProductId</td>
                <td>@product.ProductName</td>
                <td>@product.CategoryId</td>
                <td>@product.Category.CategoryName</td>
                <td>
                    <a asp-action="Edit" asp-route-id="@product.ProductId" class="btn btn-warning">Edit</a>
                    <a asp-action="Delete" asp-route-id="@product.ProductId" class="btn btn-danger">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<div class="container mt-3">
    <div class="row justify-content-end">
        <div class="col-auto">
            @if (currentPage > 1)
            {
                <a asp-action="Index" asp-route-pageNo="@(currentPage - 1)" class="btn btn-secondary">Previous</a>
            }
        </div>

        <div class="col-auto">
            <span class="pagination-text">Page @currentPage of @totalPages</span>
        </div>

        <div class="col-auto">
            @if (currentPage < totalPages)
            {
                <a asp-action="Index" asp-route-pageNo="@(currentPage + 1)" class="btn btn-secondary">Next</a>
            }
        </div>
    </div>
</div>




               
